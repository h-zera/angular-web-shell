name: CI/CD with Docker & Go

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 1. Checkout Code
        uses: actions/checkout@v4

      - name: 2. Login on GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 3. Get metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/main-web-shell
          tags: |
            # set latest tag for master branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            # set semver tags for git tags
            type=ref,event=tag

      - name: 4. Configure Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 5. Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    if: github.ref == 'refs/heads/main'

    steps:
      - name: 1. Checkout Code
        uses: actions/checkout@v4

      - name: 2. Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: 3. Compile Deployer
        run: go build -v -o ./deployer ./deployer/main.go

      - name: 4. Deploy Application Script
        env:
          HOST: ${{ secrets.HOST }}
          USER: ${{ secrets.USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}

          COMPOSE_PATH: /home/${{ secrets.USER }}/frontend-stack/
          SERVICE_NAME: main-web-shell
        run: ./deployer
